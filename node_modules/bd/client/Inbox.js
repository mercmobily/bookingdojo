define([
  "dojo/_base/declare"

, "dijit/layout/BorderContainer"
, "dijit/layout/TabContainer"
, "dijit/layout/ContentPane"

, "dgrid/Grid"
, "dgrid/List"
, "dgrid/OnDemandList"
, "dgrid/Selection"
, "dgrid/Keyboard"
, "dgrid/extensions/DijitRegistry"
, "dgrid/extensions/DnD"
, "dojo/dnd/Source"

, "put-selector/put"

, "hotplate/hotDojoAuth/panels/Manager"
, "hotplate/hotDojoWidgets/EditingWidget"
, "hotplate/hotDojoDgridWidgets/EditableList"
, "hotplate/hotDojoDgridWidgets/StoreSelect"
, "hotplate/hotDojoWidgets/BusyButton"
, "hotplate/hotDojoStores/stores"
, "hotplate/hotDojoGlobals/globals"
, "hotplate/hotDojoWidgets/widgets"

, "hotplate/bd/WorkspacesMessages/WorkspacesMessagesList"

], function(

  declare

, BorderContainer
, TabContainer
, ContentPane

, Grid
, List
, OnDemandList
, Selection
, Keyboard
, DijitRegistry
, DnD
, DnDSource
, put

, Manager
, EditingWidget
, EditableList
, StoreSelect
, BusyButton
, stores
, globals
, widgets

, WorkspacesMessagesList

){

  return declare( [ widgets.DestroyableTemplatedContainer ], {

    templateString: '' +
      '<div class="inbox">\n' +
      '  <div data-dojo-type="hotplate/bd/WorkspacesMessages/WorkspacesMessagesList"></div>\n' + 
      
      '</div>\n'+
      '',


    postCreate: function(){
      var self = this;




      this.inherited(arguments);

    },

  });
});



                          /*
                          '  <button data-dojo-type="dijit/form/DropDownButton" data-dojo-props="iconClass:\'dijitEditorIcon dijitEditorIconCut\',labelll:\'AND\'">\n'+
                          '     <span>Edit<b>!</b></span>\n'+
                          '       <span id="editMenu" data-dojo-type="dijit/Menu" >\n'+
                          '         <span id="cut" data-dojo-type="dijit/MenuItem" data-dojo-props="iconClass:\'dijitEditorIcon dijitEditorIconCut\'">Cut</span>\n'+
                          '         <span id="paste" data-dojo-type="dijit/MenuItem" data-dojo-attach-point="otherButton" data-dojo-props="iconClass:\'dijitEditorIcon dijitEditorIconPaste\'">Paste</span>\n'+
                          '       </span>\n'+
                          '     </span>\n'+
                          '  </button>\n'+
                          */

