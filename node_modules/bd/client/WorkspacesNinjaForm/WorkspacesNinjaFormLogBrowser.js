
define([
  "dojo/_base/declare"
, "dojo/aspect"
, "dojo/topic"

, "dijit/form/ValidationTextBox"
, "dijit/form/CheckBox"
, "dijit/_WidgetBase"
, "dijit/Destroyable"

, "put-selector/put"

, "hotplate/hotDojoDgridWidgets/commonMixins"
, "hotplate/hotDojoWidgets/widgets"
, "hotplate/hotDojoWidgets/TempDialog"
, "hotplate/hotDojoWidgets/EditingWidget"
, "hotplate/hotDojoDgridWidgets/EditableList"
, "hotplate/hotDojoWidgets/BusyButton"
, "hotplate/hotDojoStores/stores"
, "hotplate/hotDojoWidgets/StoreToggle"
, "hotplate/hotDojoGlobals/globals"

, "hotplate/bd/WorkspacesContacts"

], function(
  declare
, aspect
, topic

, ValidationTextBox
, CheckBox
, _WidgetBase
, Destroyable

, put

, commonMixins
, widgets
, TempDialog
, EditingWidget
, EditableList
, BusyButton
, stores
, StoreToggle
, globals

, WorkspacesContacts
){


  function formatInfo( i ){
    if( !i ) return '';
    return ( i.firstName ? i.firstName + ' ' : '' ) + ( i.middleName? i.middleName + ' ': '' ) + ( i.lastName ? i.lastName : '' );
  };
  function formatAddress( a ){
    if( !a ) return '';
    var r = (a.street ? a.street + ' ' : '') + (a.poBox ? a.poBox + ' ' : '' ) + ( a.localArea ? a.localArea + ' ' : '' ) + ( a.city ? a.city + ' ' : '' ) + ( a.county ? a.county + ' ' :  '' ) + ( a.postcode ? a.postCode : '' );
    return r;
  };
  function formatEmail( e ){
    if( !e ) return '';
    return e.email;
  };
  function formatPhoneNumber( n ){
    if( !n ) return '';
    if( n.dialCode ) return '+' + n.dialCode + ' - ' + n.number;
    else return n.number;
  };

  function formatTotal( t ){
    if( t > 1 ) return " +" + t;
    else return '';
  }; 

  return declare( [ commonMixins.FullOnDemandList, Destroyable ], {

      store: stores( 'workspacesNinjaFormLogs', { workspaceId: globals.workspaceId } ),

      sort: [ "date" ],

      //queryOptions: { placeNew: 'first' },

      renderRow: function(object, options){
      
        var self = this;
 
        var date, subsystem, submitLabel;

        var row = put( 'div.log-row' );

        put( row, 'span.date',  (new Date( object.remoteDate ) ).toString() );
        put( row, 'span.subsystem',   object.subsystem );
        put( row, 'span.submitLabel', '[' + object.submitLabel + ']' );
        put( row, 'span.line', object.line );

        return row;
      },
      //dndParams: { selfAccept: false },

      postCreate: function(){
        this.inherited(arguments);
        var self = this;

      },


    });


});


