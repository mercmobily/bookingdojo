define([
  "dojo/_base/declare"

, "dojo/dom"
, "dijit/form/ValidationTextBox"
, "dijit/registry"

, "put-selector/put"

, "hotplate/hotDojoStoreConfig/ConfigVars"
, "hotplate/hotDojoDgridWidgets/commonMixins"
, "hotplate/hotDojoWidgets/EditingWidget"
, "hotplate/hotDojoDgridWidgets/EditableList"
, "hotplate/hotDojoWidgets/BusyButton"
, "hotplate/hotDojoStores/stores"
, "hotplate/hotDojoGlobals/globals"

], function(
  declare

, dom
, ValidationTextBox
, registry

, put

, ConfigVars
, commonMixins
, EditingWidget
, EditableList
, BusyButton
, stores
, globals

){

  var templateString = '' +
    '<div>\n' +
    '  <div class="inline-form">\n' +
    '    <form data-dojo-type="dijit/form/Form" data-dojo-attach-point="formWidget" method="POST">\n' +
    '      <input class="dial-code" id="${id}_label" name="label" data-dojo-type="dijit/form/ValidationTextBox" maxlength="50" data-dojo-props="placeHolder:\'Label\', required: true" data-dojo-attach-point="labelWidget" />\n' +
    '      <input class="number" id="${id}_code" name="code" data-dojo-type="dijit/form/ValidationTextBox" maxlength="250" data-dojo-props="placeHolder:\'Code...\', required: true" data-dojo-attach-point="codeWidget" />\n' +
    '      <input class="form-submit" type="submit" data-dojo-attach-point="buttonWidget" data-dojo-type="hotplate/hotDojoWidgets/BusyButton" label="Save" />' +
    '    </form>\n'+
    '  </div>\n'+
    '</div>\n'+
    '';

  return declare( [ EditableList ], {

    iframeInProgress: false,
    iframeWaitingBody: '',
    iframe: null,

    refreshOnSubmit: false,
    immediateRefresh: false,

    ListConstructor: declare( [ commonMixins.FullOnDemandList ], {

      renderRow: function(object, options){
        var row = put('div.row', object.label + ': ' + object.code );
        return row;
      },
      queryOptions: { placeNew: 'last' },
      dndParams: { selfAccept: true },

    }),

    EditingConstructor: declare([ EditingWidget ], {
      templateString: templateString,
      alertBarDomPlacement: 'last',
      resetOnSuccess: true,
    }),


    ButtonsConstructor: declare([ EditableList.DefaultButtonsConstructor ], {
      templateString: '' +
                      '<div>\n'+
                      '  <div class="dijitPopup" data-dojo-type="dijit/form/Button" data-dojo-attach-point="editButtonWidget, focusNode" data-dojo-props="label:\'Modifica\'"> </div>\n'+
                      '  <div class="dijitPopup" data-dojo-type="dijit/form/Button" data-dojo-attach-point="deleteButtonWidget" data-dojo-props="label:\'Elimina\'"></div>\n'+
                      '  <div class="dijitPopup" data-dojo-type="dijit/form/Button" data-dojo-attach-point="contentsButtonWidget" data-dojo-props="label:\'Apri URL\'"></div>\n'+
                      '</div>\n'+
                      '',

      postCreate: function(){
 
        this.inherited(arguments);
        var self = this;

       },

    }),

    storeName: 'workspacesNinjaFormCodes',
    storeParameters: { workspaceId: globals.workspaceId },

    editingWidgetPlacement: 'inline',
    multipleEditingAllowed: false,
    addingWidgetRegion: 'top',
    gutters: false,
    buttonsPosition: 'after', // or "top" or "bottom"

    postCreate: function(){

      var self = this;

      self.inherited(arguments);
      

      // Clicking on the button will asl the iframeManager widget to
      // initiate the contents screening process
      self.buttons.contentsButtonWidget.on( 'click', function( e ){
        var row = self.row( self._buttonsRowId );
        registry.byId( 'ninja-iframe-manager' ).initiateScreening( row.data.label, row.data.code );
      });
    },
 

  } );

});


