
define([
  "dojo/_base/declare"
, "dojo/dom-style"
, "dojo/topic"

, "dijit/_WidgetBase"

, "hotplate/hotClientDojo/widgets/ViewingWidget"
, "hotplate/hotClientDojo/widgets/widgets"
, "hotplate/hotClientDojo/widgets/Dummy"
, "hotplate/bd/WorkspacesMessages/WorkspacesMessagesList"
, "hotplate/hotClientDojo/stores/stores"

], function(
  declare
, domStyle
, topic

, _WidgetBase

, ViewingWidget
, widgets
, Dummy
, WorkspacesMessagesList
, stores

){

  return declare( [ ViewingWidget ], {

    templateString: '' +
      '<div>\n' +
      '  <div class="workspaces-contacts-view" data-dojo-type="dijit/layout/BorderContainer" data-dojo-props="gutters:false">\n' +
      '    <div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="region:\'top\'">\n' +
      '      <div>\n' +
      '        <div data-dojo-attach-point="nameNode"></div>\n' +
      '        <div data-dojo-type="hotplate/hotClientDojo/widgets/Dummy"></div>\n'+
      '      </div>\n' +
      '    </div>\n' +
      '    <div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="region:\'center\'">\n' +
      '      <div data-dojo-type="hotplate/bd/WorkspacesMessages/WorkspacesMessagesList" data-dojo-props="contactId: this.contactId, workspaceId: this.workspaceId, contactObject:this.contactObject"></div>\n'+
      '      <div data-dojo-type="hotplate/hotClientDojo/widgets/Dummy"></div>\n'+
      '    </div>\n' +
      '  </div>\n' +
      '</div>\n' +
      '',

    postMixInProperties: function(){
      this.inherited(arguments);

      this.info = { 
        workspacesContacts: { 
          id: this.contactId,
          storeParameters: { workspaceId: this.workspaceId }
        } 
      } 
    },

    renderInfo: function(){

      // Display the information
      var i = this.info.workspacesContacts.data;
      this.nameNode.innerHTML = ( i.firstName ? i.firstName + ' ' : '' ) + ( i.middleName? i.middleName + ' ': '' ) + ( i.lastName ? i.lastName : '' );
    },



  });
});

