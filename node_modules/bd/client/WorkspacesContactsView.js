
define([
  "dojo/_base/declare"
, "dojo/dom-style"
, "dojo/topic"

, "dijit/_WidgetBase"
, "hotplate/hotDojoWidgets/widgets"
, "hotplate/hotDojoWidgets/Dummy"

, "hotplate/bd/WorkspacesMessages/WorkspacesMessagesList"

, "hotplate/hotDojoStores/stores"

], function(
  declare
, domStyle
, topic

, _WidgetBase

, widgets
, Dummy

, WorkspacesMessagesList

, stores

){

  return declare( [ widgets.DestroyableTemplatedContainer ], {

    templateString: '' +
      '<div>\n' +
      '  <div class="workspaces-contacts-view" data-dojo-type="dijit/layout/BorderContainer" data-dojo-props="gutters:false">\n' +
      '    <div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="region:\'top\'">\n' +
      '      <div>\n' +
      '        <div data-dojo-attach-point="detailsNode"></div>\n' +
      '        <div data-dojo-type="hotplate/hotDojoWidgets/Dummy"></div>\n'+
      '      </div>\n' +
      '    </div>\n' +
      '    <div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="region:\'center\'">\n' +
      '      <div data-dojo-attach-point="workspacesMessagesListNode"></div>\n'+
      '      <div data-dojo-type="hotplate/hotDojoWidgets/Dummy"></div>\n'+
      '    </div>\n' +
      '  </div>\n' +
      '</div>\n' +
      '',

    _updateContactInfo: function(){

      // Display the information
      var i = this.contactObject;
      this.detailsNode.innerHTML = ( i.firstName ? i.firstName + ' ' : '' ) + ( i.middleName? i.middleName + ' ': '' ) + ( i.lastName ? i.lastName : '' );
    },

    postCreate: function(){
      this.inherited(arguments);

      // Logic to add stuff to the form will go here
      var self = this;

      self._updateContactInfo();

      self.own(

        // Update contacts' details if they do change
        topic.subscribe( 'storeRecordUpdate', function( from, message, remote ) {
          if( message.storeName === 'workspacesContacts' && message.targetId == self.contactObject.id){
            self.contactObject = message.target;
            self._updateContactInfo();
          }
        })

      );

      // Create the workspaceContactsMessages widget, passing through all of the
      // grid's info
      self.workspacesMessagesList = new WorkspacesMessagesList( { 
        contactObject: self.contactObject,
      }, self.workspacesMessagesListNode );

      self.workspacesMessagesList.startup();

    },

  });


});

