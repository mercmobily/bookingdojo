
define([
  "dojo/_base/declare"
, "dojo/dom-style"
, "dojo/topic"

, "dijit/_WidgetBase"
, "hotplate/hotDojoWidgets/widgets"
, "hotplate/hotDojoWidgets/Dummy"

, "hotplate/bd/WorkspacesContacts/WorkspacesContactsInfo"
, "hotplate/bd/WorkspacesContacts/WorkspacesContactsEmails"
, "hotplate/bd/WorkspacesContacts/WorkspacesContactsAddresses"
, "hotplate/bd/WorkspacesContacts/WorkspacesContactsPhoneNumbers"

, "hotplate/hotDojoStores/stores"

], function(
  declare
, domStyle
, topic

, _WidgetBase

, widgets
, Dummy

, WorkspacesContactsInfo
, WorkspacesContactsEmails
, WorkspacesContactsAddresses
, WorkspacesContactsPhoneNumbers

, stores


){

  return declare( [ widgets.DestroyableTemplatedContainer ], {

    templateString: '' +
      '<div class="workspaces-contacts-view">\n' +
      '  <div data-dojo-attach-point="detailsNode"></div>\n' +
      '  <span>AH!</span>\n' +
      //'  <div data-dojo-type="hotplate/hotDojoWidgets/Dummy"></div>\n'+
      //'  <div data-dojo-type="workspacesContactsComments"></div>\n'+
      '</div>\n' +
      '',

    _updateContactInfo: function(){

      // Display the information
      var i = this.contactObject;
      this.detailsNode.innerHTML = ( i.firstName ? i.firstName + ' ' : '' ) + ( i.middleName? i.middleName + ' ': '' ) + ( i.lastName ? i.lastName : '' );
    },

    postCreate: function(){
      this.inherited(arguments);

      // Logic to add stuff to the form will go here
      var self = this;

      debugger;
      self._updateContactInfo();

      self.own(

        // Update contacts' details if they do change
        topic.subscribe( 'storeRecordUpdate', function( from, message, remote ) {
          if( message.storeName === 'workspacesContacts' && message.targetId == self.contactObject.id){
            self.contactObject = message.target;
            self._updateContactInfo();
          }
        })

      );


/*
      // Create the workspaceContacts widget, passing through all of the
      // grid's info
      self.workspacesContactsInfoWidget = new WorkspacesContactsInfo( { 
        storeParameters: self.storeParameters,
        storeName: self.storeName,
        recordId: self.recordId,
      }, self.workspacesContactsInfoNode );
      self.workspacesContactsInfoWidget.startup();

      // On successfulsubmit, any sub-widgets will finally be able
      // to exist as recordId will be set
      self.workspacesContactsInfoWidget.on( 'gotrecordid', function( e ){

        // Create the sub-widgets and start it up
        self.workspacesContactsEmailsWidget = new WorkspacesContactsEmails({
          storeParameters: self.storeParameters,
          storeExtraParameters: { contactId: self.workspacesContactsInfoWidget.recordId },
        }, self.workspacesContactsEmailsNode );

        self.workspacesContactsAddressesWidget = new WorkspacesContactsAddresses({
          storeParameters: self.storeParameters,
          storeExtraParameters: { contactId: self.workspacesContactsInfoWidget.recordId },
        }, self.workspacesContactsAddressesNode );

        self.workspacesContactsPhoneNumbersWidget = new WorkspacesContactsPhoneNumbers({
          storeParameters: self.storeParameters,
          storeExtraParameters: { contactId: self.workspacesContactsInfoWidget.recordId },
        }, self.workspacesContactsPhoneNumbersNode );

        // Make the extra part of the form visible and start things up
        domStyle.set( self.moreNode, { display: 'block' } );
        self.workspacesContactsEmailsWidget.startup();
        self.workspacesContactsAddressesWidget.startup();
        self.workspacesContactsPhoneNumbersWidget.startup();
        self.resize();
      });

      */

    },

  });


});

