require([
   "dojo/_base/declare",
   "dojo/on",
   "dojo/dom",
   "dojo/dom-attr",
   "dojo/topic",

   "dijit/Dialog",
   "dijit/form/ValidationTextBox",
   "dijit/_WidgetBase",
   "dijit/_TemplatedMixin",
   "dijit/_WidgetsInTemplateMixin",

   "hotplate/bd/globals",

   "hotplate/hotDojoWidgetHooks/SyncTopic",
   "hotplate/hotDojoWidgetHooks/SyncSubscriber!hotplate/hotDojoWidgetHooks/postCreate/after/registerForm|mainChangeRegisterForm",

   ], function(
     declare
     , on
     , dom
     , domAttr
     , topic

     , Dialog
     , ValidationTextBox
     , _WidgetBase
     , _TemplatedMixin
     , _WidgetsInTemplateMixin

     , globals

     , SyncTopic
     //, dummy

 ){



  console.log("In mainChangeRegisterForm.js");


  // setTimeout( function() { 

  //Sync.incSubscriber('hotplate/hotDojoWidgetHooks/postCreate/after/registerForm');
  
  console.log("In mainChangeRegisterForm.js after timeout");

  topic.subscribe('hotplate/hotDojoWidgetHooks/postCreate/after/registerForm', function( widget ) {

   console.log("Subscribe in registerform happened ");
     
   var extraFields = new (declare( [ _WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin ], {
      parentId: widget.id,

      templateString: '<div>' +
                        '<label for="${parentId}_login">Name</label>' +
                        '<input name="name" id="${parentId}_name" data-dojo-attach-point="nameWidget" data-dojo-type="dijit.form.ValidationTextBox" data-dojo-props="required:true"/>' +
                        '<label for="${parentId}_login">Last name</label>' +
                        '<input name="surname" id="${parentId}_surname" data-dojo-attach-point="surnameWidget" data-dojo-type="dijit.form.ValidationTextBox" data-dojo-props="required:true"/>' +
                      '</div>',
      
     // This is important in order to get those inner widgets "found" by the form
     getChildren: function(){
       return [ this.nameWidget, this.surnameWidget ];
      
     },

    }) );

   // extraFields = new ExtraFields(); 
   extraFields.placeAt(widget.formAsAnon, 'first');
  });

  SyncTopic.ready('hotplate/hotDojoWidgetHooks/postCreate/after/registerForm');

  // }, 2000 );


/*
  // The user dialog with the config in it. Not displayed to start with
  var userDialog = new Dialog( {
     title: "Your account",
  });
  userDialog.addChild( new UserConfig() );

  // This div is set by bd.js (the server counterpart of this program),
  // by the `pageElementsPerPage` hook
  var userConfigDiv = dom.byId('userConfig');

  // Put a bit of an explanation in the div, make the mouse's little hand appear when hover
  userConfigDiv.innerHTML = "See your user configuration";
  domAttr.set(userConfigDiv, { style: { cursor: 'pointer' } } );

  // Attach to the DOM click event, showing the dialog
  on( userConfigDiv, 'click', function(){
    userDialog.show();
  });
  */ 

});

