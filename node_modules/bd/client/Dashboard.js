define([
   "dojo/_base/declare",
   "dojo/when",
   "dojo/store/Observable",
   "dojo/topic",
   "dojo/on",

   "dijit/_WidgetBase",
   "dijit/_TemplatedMixin",
   "dijit/_WidgetsInTemplateMixin",
   "dijit/Destroyable",
   "dijit/Dialog",
   "dijit/_OnDijitClickMixin",

   "dijit/layout/BorderContainer",
   "dijit/layout/StackContainer",
   "dijit/layout/TabContainer",
   "dijit/layout/ContentPane",
   'dijit/_Container',
   'dijit/layout/_ContentPaneResizeMixin',

   'dgrid/List',
   "dgrid/Selection",
   "dgrid/Keyboard",

   "hotplate/hotDojoAuth/LogoutButton",
   "hotplate/hotDojoWidgetHooks/_TemplatedHooksMixin",
   "hotplate/hotDojoStores/stores",
   "hotplate/hotDojoStores/AppStoreNotify",
   "hotplate/hotDojoWidgets/_OverlayMixin",
   "hotplate/hotDojoCometMessages/messages",

   "hotplate/bd/globals",
   "hotplate/bd/AccessConfig",
   "hotplate/bd/AdminConfig",
   "hotplate/bd/UserConfig",

   "hotplate/bd/AppConfigVars",

   // "app/widgets/SearchPage",

   ], function(
     declare
     , when
     , Observable
     , topic
     , on

     , _WidgetBase
     , _TemplatedMixin
     , _WidgetsInTemplateMixin
     , Destroyable
     , Dialog
     , _OnDijitClickMixin

     , BorderContainer
     , StackContainer
     , TabContainer
     , ContentPane
     , _Container
     , _ContentPaneResizeMixin

     , List
     , Selection
     , Keyboard

     , LogoutButton
     , _TemplatedHooksMixin
     , stores
     , dummy
     , _OverlayMixin
     , messages

     , globals
     , AccessConfig
     , AdminConfig
     , UserConfig

     , AppConfigVars

 ){

    // Create the "login" pane, based on a normal ContentPane
     // var Dashboard = declare('hotplate/bd/Dashboard',  [_WidgetBase, _Container, _ContentPaneResizeMixin, Destroyable, _OverlayMixin, _TemplatedMixin, _WidgetsInTemplateMixin ], {
     var Dashboard = declare('hotplate/bd/Dashboard',  [ ContentPane, Destroyable, _OverlayMixin, _TemplatedMixin, _WidgetsInTemplateMixin ], {

      widgetsInTemplate: true,

      templateString: jade.compile('' +
        'div\n' +
        '  p Ahah\n' +
        '  p Ahah\n' +
        '  p Ahah\n' +
        '  p Ahah\n' +
        '  p Ahah\n' +
        '  div( data-dojo-attach-point="listNode", style="height:auto;")\n'+
        '')(),


        postCreate:function(){
          var that = this, q;

          T = this;

          this.inherited(arguments);

          var escapeHTML = function( str ) {
            var div  = document.createElement( 'div' );
            var text = document.createTextNode( str );
            div.appendChild( text );
            return div.innerHTML;
          };

        },

        startup: function(){
          this.inherited(arguments);

          var SuperList = declare( [List, Selection, Keyboard ] );
          // attach to a DOM element indicated by its ID
          this.list = L = new SuperList( { className:'select-list' }, this.listNode );
          // render some data
          this.list.renderArray(['one', 'two', 'three', 'one', 'two', 'three','one', 'two', 'three','one', 'two', 'three','one', 'two', 'three',] );
          this.list.startup();
          this.list.resize();
        },

        resize: function(){
          this.inherited(arguments);
          console.log('RESIZED HERE');
          this.list.resize();
        }

   });

  return Dashboard;

});

