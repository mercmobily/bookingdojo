define([
   "dojo/_base/declare",
   "dojo/topic",

   "dijit/Dialog",
   "dijit/_OnDijitClickMixin",
   "dijit/layout/BorderContainer",
   "dijit/layout/TabContainer",
   "dijit/layout/ContentPane",

   "hotplate/hotDojoStores/stores",
   "hotplate/hotDojoWidgets/_OverlayMixin",
   "hotplate/hotDojoGlobals/globals",
   "hotplate/hotDojoAuth/panels/Resume",
   "hotplate/hotDojoJade/DestroyableJadeTemplatedContainer",
   "hotplate/hotDojoStoreConfig/ConfigVars",
   "hotplate/hotDojoWidgets/util",
   "hotplate/hotDojoComet/_TabRegisterMixin",
   "hotplate/hotDojoAuth/_ReLoginMixin",

   "hotplate/bd/WorkspaceUserConfig",
   "hotplate/bd/WorkspaceConfig",
   "hotplate/bd/UserConfig",
   "hotplate/bd/Dashboard",
   "hotplate/bd/Contacts",

   // "app/widgets/SearchPage",

   ], function(
     declare
     , topic

     , Dialog
     , _OnDijitClickMixin
     , BorderContainer
     , TabContainer
     , ContentPane

     , stores
     , _OverlayMixin
     , globals
     , Resume
     , DestroyableJadeTemplatedContainer
     , ConfigVars
     , util
     , _TabRegisterMixin
     , _ReLoginMixin

     , WorkspaceUserConfig
     , WorkspaceConfig
     , UserConfig
     , Dashboard
     , Contacts


 ){
    var counter = 0;

    return declare( [ DestroyableJadeTemplatedContainer, _OverlayMixin, _OnDijitClickMixin, _TabRegisterMixin ], {

      workspaceName: vars.hotDojoAppContainer.workspaceName,

      templateString: '' +
        'div\n' +
        '  div.bookingDojo(data-dojo-type="dijit/layout/BorderContainer", data-dojo-props="gutters:false, design: \'headline\'")\n' +
        '    div.appHeader(data-dojo-type="dijit/layout/ContentPane", data-dojo-props="gutters:false, region: \'top\'")\n' +
        '      span Booking Dojo\n'+
        '      span(data-dojo-attach-point="userName", style="cursor:pointer", data-dojo-attach-event="ondijitclick:showUserConfig")\n' +

        '    div(data-dojo-attach-point="mainTabContainer", data-dojo-type="dijit/layout/TabContainer", data-dojo-props="region: \'center\', tabPosition: \'left-h\'")\n' +
        '      div(data-dojo-attach-point="widgetDashboard", data-dojo-type="hotplate/bd/Dashboard", data-dojo-props="title:\'Dashboard\'", class="dashboard")\n' +
        '      div(data-dojo-attach-point="inbox",data-dojo-type="dijit/layout/ContentPane",data-dojo-props="title: \'Inbox\'")\n' +
        '      div(data-dojo-attach-point="search",data-dojo-type="dijit/layout/ContentPane",data-dojo-props="title:\'Search\'")\n' +
        '      div(data-dojo-attach-point="calendar",data-dojo-type="dijit/layout/ContentPane",data-dojo-props="title:\'Calendar\'")\n' +
        '      div(data-dojo-attach-point="contacts",data-dojo-type="hotplate/bd/Contacts",data-dojo-props="title:\'Contacts\'")\n' +
        '      div(data-dojo-attach-point="workspaceUserConfig",data-dojo-type="hotplate/bd/WorkspaceUserConfig",data-dojo-props="title: \'Your Config\'")\n' +
        '      div(data-dojo-attach-point="workspaceConfig",data-dojo-type="hotplate/bd/WorkspaceConfig",data-dojo-props="title: \'Admin\'")\n' +
        '',

        showUserConfig: function(){
          this.userDialog.show();
        },

        postCreate: function(){
          var self = this;

          this.inherited(arguments);

          // Place the user's name at the top. Taken from configuration. If it changes,
          // it's updated in realtime
          self.userName.innerHTML = util.escapeHTML( ConfigVars.UsersConfig.name );
          topic.subscribe( 'configChange/UsersConfig', function( record ){
            self.userName.innerHTML = util.escapeHTML( record.name );
          });     

          // The user-wide configuration dialog
          this.userDialog = new Dialog( {
            title: "Your account",
          });
          this.userDialog.addChild( new UserConfig );
          this.userDialog.startup();

        },

        startup: function(){
          this.inherited(arguments);

        },

   });

});


