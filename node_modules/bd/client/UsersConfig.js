
define([
  "dojo/_base/declare",

  "dijit/form/Form",
  "dijit/form/ValidationTextBox",
  "hotplate/hotDojoWidgets/BusyButton",

  'put-selector/put',

  "hotplate/hotDojoWidgets/EditingWidget",
  "hotplate/hotDojoDgridWidgets/StoreSelect",
  "hotplate/hotDojoStores/stores",
  "hotplate/hotDojoGlobals/globals",
  "hotplate/hotDojoJade/_JadeTemplatedMixin",

   ], function(
     declare

     , Form
     , ValidationTextBox
     , BusyButton

     , put

     , EditingWidget
     , StoreSelect
     , stores
     , globals
     , _JadeTemplatedMixin
 ){


  var UsersCategoriesSelect =  declare( 'hotplate/bd/UsersConfig/UsersCategoriesSelect', [ StoreSelect ], {
        storeName: 'UsersCategories',
        store: stores( 'UsersCategories', { userId: globals.userId } ),
        baseClass: 'category-picker',
        // query: { name: "O" },
        queryOptions: { placeNew: 'last' },
        renderRow: function( object ){
          var row = put('div.row', object.name );
          return row;
        },
    });

  return declare( [ _JadeTemplatedMixin, EditingWidget ], {

    widgetsInTemplate: true,

    templateString: '' +
      'div\n' +
      '  form( data-dojo-type="dijit/form/Form", data-dojo-attach-point="formWidget", method="POST")\n' +

      '    .box\n'+
      '      p.boxTitle User information\n' +

      '      .inputField( style="display:inline-block; margin-right:30px")\n' +
      '        label( for="${id}_name") Your name\n' +
      '        input(  id="${id}_name", name="name", data-dojo-type="dijit/form/ValidationTextBox", style="width:10em;", maxlength="40", data-dojo-props="" )\n' + 
      '      .inputField( style="display:inline-block;")\n' +
      '        label( for="${id}_surname") Last Name\n' +
      '        input(  id="${id}_surname", name="surname", data-dojo-type="dijit/form/ValidationTextBox", style="width:40em", maxlength="40", data-dojo-props="" )\n' +

      '      .inputField\n' +
      '        label( for="${id}_email) Email\n' +
      '        input(  id="${id}_email", name="email", data-dojo-type="dijit/form/ValidationTextBox", style="width:30em", maxlength="80", name="email", data-dojo-props="validator:sharedFunctions.hotCoreCommonValidators.emailValidator, required:true, invalidMessage:sharedFunctions.hotCoreCommonValidators.emailValidator(false)")\n' +

      '      div( name="userCategory", data-dojo-type="hotplate/bd/UsersConfig/UsersCategoriesSelect")\n'+

      '    input.formSubmit( type="submit", data-dojo-attach-point="buttonWidget", data-dojo-type="hotplate/hotDojoWidgets/BusyButton", label="Update")\n' +
      '',

    recordId: globals.userId,
    store: stores( 'UsersConfig', {} ),
    storeName: 'UsersConfig',

    postCreate: function(){
      this.inherited(arguments);
    },

  });

});


