
define([
  "dojo/_base/declare"
, "dojo/topic"

, "dijit/layout/ContentPane"

, "hotplate/hotDojoWidgets/widgets"

, "hotplate/hotDojoGlobals/globals"
, "hotplate/hotDojoStores/stores"
, "hotplate/hotDojoStoreConfig/ConfigVars"

, "hotplate/bd/WorkspacesUsersConfig/WorkspacesUsersInfo"
, "hotplate/bd/WorkspacesUsersConfig/WorkspacesUsersActivities"
, "hotplate/bd/WorkspacesContacts"

], function(
  declare
, topic

, ContentPane

, widgets

, globals
, stores
, ConfigVars

, WorkspacesUsersInfo
, WorkspacesUsersActivities
, WorkspacesContacts

){

  return declare( [ widgets.DestroyableTemplatedContainer ], {

    templateString: '' +
      '<div class="workspaces-users-config">\n' +
      '  <div class="box">\n'+
      '    <p class="boxTitle">Your contact information</p>\n' +
      '    <div id="workspaces-users-config-contact-editor" data-dojo-attach-point="contactEditorWidget"></div>\n' +
      '  </div>\n' +
      
      '  Your main address: <span data-dojo-attach-point="mainEmailAddressNode"></span>\n' +

      '  <div data-dojo-type="hotplate/bd/WorkspacesUsersConfig/WorkspacesUsersInfo"></div>\n' +

      '  <span class="config-heading">Activities you do for this workspace</span>\n' +
      '  <div class="small-editable-list" data-dojo-type="hotplate/bd/WorkspacesUsersConfig/WorkspacesUsersActivities"></div>\n'+
    
      '</div>\n' +
      '',

    postCreate: function(){
      this.inherited(arguments);

      var self = this;

      //var myContactId = ConfigVars.workspacesUsersInfo._children.workspacesContacts[0].id;
      var myContactId = vars.bd.userContact.id;

      // Make a new WorkspaceContacts instance, and place it over self.contactEditorWidget
      new WorkspacesContacts({
        storeName: 'workspacesContacts',
        storeParameters: { workspaceId: globals.workspaceId },
        recordId: myContactId,
      }, self.contactEditorWidget);

      // Print the main email Id for myContact in self.mainEmailAddressNode, AND watch for
      // changes in case it gets updated.
      var workspacesContactsStore = stores('workspacesContacts', { workspaceId: globals.workspaceId } ) ;

      // Place own's email address in the form, and also check for changes accordingly
      // Note that the user's own contact is just a special case in terms of contacts. The contact info is
      // not QUITE part of the users' configuration
      workspacesContactsStore.get( myContactId ).then( function( record ){
        self.mainEmailAddressNode.innerHTML = record._children.mainEmailId ? record._children.mainEmailId.email : 'Not set';
      });
      workspacesContactsStore.on('update', function( event ){
        if( event.target.id == myContactId ){
         if( event.target._children.mainEmailId ) self.mainEmailAddressNode.innerHTML = event.target._children.mainEmailId.email; 
        }
      });

    },

  });

});
