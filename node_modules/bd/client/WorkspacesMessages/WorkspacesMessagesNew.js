/*
INPUT: 
  * workspaceId
  * [contactId] - The contactId who will receive the message.
DESCRIPTION
The main form that will display one tab per "messaging method".
The recipient is optional.
If the recipient is set, and the recipient has no email defined, the 'email' tab won't e displayed. Same applies to the 'sms' tab.
*/

define([
  "dojo/_base/declare"

, "dojo/on"
, "dojo/when"

, "dijit/layout/TabContainer"

, "hotplate/hotClientDojo/widgets/Dummy"
, "hotplate/hotClientDojo/widgets/ViewingWidget"

, "hotplate/bd/WorkspacesMessages/WorkspacesMessagesPhoneNumbersNew"
, "hotplate/bd/WorkspacesMessages/WorkspacesMessagesEmailsNew"


], function(
  declare

, on
, when

, TabContainer


, Dummy
, ViewingWidget

, WorkspacesMessagesPhoneNumbersNew
, WorkspacesMessagesEmailsNew

){

  return declare( [ ViewingWidget ], {

    doLayout: false,

    templateString: '' +
      '<div class="workspaces-messages">\n' +
      '  <div class="workspaces-messages-tab" data-dojo-type="dijit/layout/TabContainer" data-dojo-props="doLayout: false" data-dojo-attach-point="tabsWidget">\n' +
      '   <div data-dojo-type="hotplate/bd/WorkspacesMessages/WorkspacesMessagesPhoneNumbersNew" data-dojo-props="title:\'SMS\', workspaceId: this.workspaceId, contactId: this.contactId" data-dojo-attach-point="smsTab"></div>\n' +
      '   <div data-dojo-type="hotplate/bd/WorkspacesMessages/WorkspacesMessagesEmailsNew" data-dojo-props="title:\'Email\', workspaceId: this.workspaceId, contactId: this.contactId" data-dojo-attach-point="emailTab"></div>\n' +
      '  </div>\n' +
      '</div>\n' +
      '',  

    postMixInProperties: function(){
      this.inherited(arguments);

      if( this.contactId ){

        this.info = { 
          workspacesContacts: { 
            id: this.contactId,
            storeParameters: { workspaceId: this.workspaceId }
          }
        } 
      } 
    },

    postCreate: function(){
      this.inherited(arguments);

      var self = this;

      self.own(
        self.smsTab.on(  'successfulsubmit', function( e ){
          on.emit( self.domNode, 'successfulsubmit', e );
        }),
        self.emailTab.on(  'successfulsubmit', function( e ){
          on.emit( self.domNode, 'successfulsubmit', e );
        })
      );

    },

    renderInfo: function(){

      var self = this;

      self.own(
        self.smsTab.on(  'successfulsubmit', function( e ){
          on.emit( self.domNode, 'successfulsubmit', e );
        }),
        self.emailTab.on(  'successfulsubmit', function( e ){
          on.emit( self.domNode, 'successfulsubmit', e );
        })
      );


      // If a contact is specified, hide tabs that shouldn't be there
      // (no phone number)
      if( this.contactId ){
        var contactObject = this.info.workspacesContacts.data;

        if( ! contactObject._children.mainPhoneNumberId ){
          self.tabsWidget.removeChild( self.smsTab );
        }

        if( ! contactObject._children.mainEmailId ){
          self.tabsWidget.removeChild( self.emailTab );
        }

      }

      this.alreadyRendered = true;      

      
    }
  });

});
