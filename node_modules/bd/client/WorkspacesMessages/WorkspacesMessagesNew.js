
define([
  "dojo/_base/declare"

, "dojo/on"
, "dojo/when"

, "dijit/layout/TabContainer"
, "dijit/layout/ContentPane"

, "hotplate/hotClientDojo/widgets/widgets"
, "hotplate/hotClientDojo/widgets/Dummy"
, "hotplate/hotClientDojo/widgets/ViewingWidget"

, "hotplate/hotClientDojo/stores/stores"
, "hotplate/bd/WorkspacesMessages/WorkspacesMessagesPhoneNumbersNew"
, "hotplate/bd/WorkspacesMessages/WorkspacesMessagesEmailsNew"


], function(
  declare

, on
, when

, TabContainer
, ContentPane

, widgets
, Dummy
, ViewingWidget

, stores
, WorkspacesMessagesPhoneNumbersNew
, WorkspacesMessagesEmailsNew

){

  return declare( [ ViewingWidget ], {

    doLayout: false,

    templateString: '' +
      '<div class="workspaces-messages">\n' +
      '  <div class="workspaces-messages-tab" data-dojo-type="dijit/layout/TabContainer" data-dojo-props="doLayout: false" data-dojo-attach-point="tabsWidget">\n' +
      '   <div data-dojo-type="hotplate/bd/WorkspacesMessages/WorkspacesMessagesPhoneNumbersNew" data-dojo-props="title:\'SMS\', workspaceId: this.workspaceId, contactId: this.contactId" data-dojo-attach-point="smsTab"></div>\n' +
      '   <div data-dojo-type="hotplate/bd/WorkspacesMessages/WorkspacesMessagesEmailsNew" data-dojo-props="title:\'Email\', workspaceId: this.workspaceId, contactId: this.contactId" data-dojo-attach-point="emailTab"></div>\n' +
      '  </div>\n' +
      '</div>\n' +
      '',  

    constructor: function(){
      this.alreadyRendered = false;
    },

    postMixInProperties: function(){
      this.inherited(arguments);

      if( this.contactId ){

        this.info = { 
          workspacesContacts: { 
            id: this.contactId,
            storeParameters: { workspaceId: this.workspaceId }
          }
        } 
      } 
    },

    renderInfo: function(){

      var self = this;

      this.alreadyRendered = true;      

      self.own(
        self.smsTab.on(  'successfulsubmit', function( e ){
          on.emit( self.domNode, 'successfulsubmit', e );
        }),
        self.emailTab.on(  'successfulsubmit', function( e ){
          on.emit( self.domNode, 'successfulsubmit', e );
        })
      );


      // If a contact is specified, hide tabs that shouldn't be there
      // (no phone number)
      if( this.contactId ){
        var contactObject = this.info.workspacesContacts.data;

        if( ! contactObject._children.mainPhoneNumberId ){
          self.tabsWidget.removeChild( self.smsTab );
        }

        if( ! contactObject._children.mainEmailId ){
          self.tabsWidget.removeChild( self.emailTab );
        }

      }
      
    }
  });

});
