define( [
  "dojo/_base/declare"
, "dojo/topic"

, "hotplate/hotClientDojo/stores/stores"


], function(
  declare
, topic

, stores

){

  topic.subscribe( 'hotplate/hotClientDojo/newStore', function( storeName, store ){

    switch( storeName ){
      case 'workspacesContactsEmails':
      case 'workspacesContactsAddresses':
      case 'workspacesContactsPhoneNumbers':

        // Workout the field name in 
        var mainFieldName = storeName === 'workspacesContactsEmails' ? 'mainEmailId' : ( storeName === 'workspacesContactsPhoneNumbers' ? 'mainPhoneNumberId' : 'mainAddressId'); 

        store.on( 'add,update,delete', function( event ){

          var first = store.memCache.data[ 0 ];

          // There is no record, end of story.
          if( ! first ) return;

          // Get the contact from the store
          var contactsStore = stores( 'workspacesContacts', { workspaceId: event.target.workspaceId });
          var contact = contactsStore.memCache.getSync( event.target.contactId );

          // If the contact isn't in the cache, that's it: nothing to do
          // This is very possible! 
          if( ! contact ) return;

          // If the first item in the store's cache is NOT the contact's mainEmailId, then make it so
          // Also emit an "update" event on the contact, since it has (unofficially) changed
          if( typeof contact[ mainFieldName ] !== 'undefined' && contact[ mainFieldName ]!== first.id ){
            contact[ mainFieldName ] = first.id;
            contact._children[ mainFieldName ] = first;
            contact._children[ mainFieldName ]._children = {};
            contactsStore.memCache.putSync( contact );

            contactsStore.emit( 'update', { target: contact, targetId: contact.id, doNotUpdateParentsCache: true } );
          }          
        });
      break;

    } // switch
  })

  return {};

});

