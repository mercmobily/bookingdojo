/*
INPUT:
* userId 
DESCRIPTION
An editable list manipulating the `usersInterests` store. 
*/
define([
  "dojo/_base/declare"

, "dijit/form/ValidationTextBox"

, "put-selector/put"

, "hotplate/hotClientDojo/dgridWidgets/commonMixins"
, "hotplate/hotClientDojo/widgets/EditingWidget"
, "hotplate/hotClientDojo/dgridWidgets/EditableList"
, "hotplate/hotClientDojo/widgets/BusyButton"

], function(
  declare

, ValidationTextBox

, put

, commonMixins
, EditingWidget
, EditableList
, BusyButton

){
  return declare( [ EditableList ], {

    ownClass: 'users-interests',

    ListConstructor: declare( [ commonMixins.FullOnDemandList ], {

      renderRow: function(object, options){
        var row = put('div.row', object.name );
        return row;
      },

      dndParams: { selfAccept: true },
    }),

    EditingWidgetConstructor: declare([ EditingWidget ], {
      templateString: '' +
        '<div>\n' +
        '  <div class="inline-form">\n' +
        '    <form data-dojo-type="dijit/form/Form" data-dojo-attach-point="formWidget" method="POST">\n' +
        '      <input id="${id}_name" name="name" data-dojo-type="dijit/form/ValidationTextBox" maxlength="50" data-dojo-props="required:true" data-dojo-attach-point="nameWidget" />\n' +
        '      <input class="form-submit" type="submit" data-dojo-attach-point="buttonWidget" data-dojo-type="hotplate/hotClientDojo/widgets/BusyButton" label="Save" />' +
        '    </form>\n'+
        '  </div>\n'+
        '</div>\n'+
        '',
        alertBarDomPlacement: 'last',
        resetOnSuccess: true,
    }),

    storeName: 'usersInterests',

    postMixInProperties: function(){
      this.inherited(arguments);

      this.storeParameters = { userId: this.userId };
    },


    editingWidgetPlacement: 'popup',
    multipleEditingAllowed: true,
    addingWidgetPosition: 'top',
    gutters: false,
    closeDialogAfterSubmit: true,

    buttonsPosition: 'after', // or "top" or "bottom"
  } );

});



