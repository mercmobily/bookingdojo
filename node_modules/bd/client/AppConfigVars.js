
define([
  "dojo/_base/declare",
  "dojo/topic",
  "dojo/when",
  "dojo/aspect",
  "hotplate/hotDojoStores/stores",
  "hotplate/hotDojoStores/AppStoreNotify",
  "hotplate/hotDojoCometMessages/messages",
  "hotplate/bd/globals",

  "dojo/domReady!",
   ], function(
   declare
 , topic
 , when
 , aspect
 , stores
 , dummy
 , messages
 , globals
 ){


  var r = {};
  var userConfigStore      = stores('userConfig',      { workspaceId: globals.workspaceId } ),
      workspaceConfigStore = stores('workspaceConfig', { workspaceId: globals.workspaceId } ),
      accessConfigStore    = stores('accessConfig',    { workspaceId: globals.workspaceId } );

  userConfigStore.memCache.put( vars.bd.userConfig );
  workspaceConfigStore.memCache.put( vars.bd.workspaceConfig );
  accessConfigStore.memCache.put( vars.bd.accessConfig );

  // Assign the config variables
  r.userConfig = vars.bd.userConfig;
  r.workspaceConfig = vars.bd.workspaceConfig;
  r.accessConfig = vars.bd.accessConfig;


  topic.subscribe('storeUpdate', function( from, message){
    if( message.storeName === 'userConfig' && message.storeTarget == userConfigStore.target && message.objectId === globals.userId ){
      r.userConfig = message.object;
      topic.publish('configChange/user', r.accessConfig, message );
    }
  });

  topic.subscribe('storeUpdate', function( from, message ){
    if( message.storeName === 'workspaceConfig' && message.storeTarget == workspaceConfigStore.target && message.objectId === globals.workspaceId ){
      r.workspaceConfig = message.object;
      topic.publish('configChange/workspace', r.workspaceConfig, message );
    }
  });

  topic.subscribe('storeUpdate', function( from, message ){
    if( message.storeName === 'accessConfig' && message.storeTarget == accessConfigStore.target && message.objectId === globals.userId ){
      r.accessConfig = message.object;
      topic.publish('configChange/access', r.workspaceConfig, message );
    }
  });


  return r;

});


