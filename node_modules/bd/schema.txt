Mongodb doesn't have a "schema". However, it's handy to at least have an idea of whats going on.
So, here it is:


# SCHEMA BY hotDojoAuth

workspaces
----------
_id     : ObjectId
name    : String, unique
isActive: Boolean
settings: {
}
access    : [
  _id     : ObjectId [users]
  token   : String
  settings: {
  }
]
** INDEX: _id, access._id, access.token, isActive 

users
-----
_id           : ObjectId
login         : String, unique
password      : String,
registerEmail : String
settings: {
}
** INDEX: _id, login, password, registerEmail



# SCHEMA BY bd

It adds settings to the "bd" application. This is the result schema:

workspaces
----------
_id     : ObjectId
name    : String, unique
isActive: Boolean
settings: {
  tag     : String <--- ADDED
  longName: String <--- ADDED
}
access    : [
  _id     : ObjectId [users]
  token   : String
  settings: {
    adminFlag : String <--- ADDED
    localEmail: String <--- ADDED
  }
]

users
-----
_id           : ObjectId
login         : String, unique
password      : String,
registerEmail : String
settings: {
  name    : String <--- ADDED
  lastName: String <--- ADDED
  email   : String <--- ADDED
}
INDEX: settings.name, settings.lastName, settings.email

# SCHEMA BY ***Logger

logs
----

# SCHEMA BY hotMongoMessages

tabs
----
_id        : ObjectId
userId     : ObjectId [users]
workspaceId: ObjectId [workspaces]
lastSync   : Date
messages: [
  from   : ObjectId [users]
  type   : String
  message: {}
}
INDEX: _id, userId, workspaceId, lastSync, messages.from, messages.type

# SCHEMA BY hotMongooseLogger

logs
----
{}




